name: Android Build (Buildozer without Docker)

on:
  push:
    branches: [ "main", "master" ]
    tags: [ "v*" ]
  pull_request:
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest

    env:
      APP_DIR: jdv-app
      VERSION_NAME: 0.1.0
      VERSION_CODE: ${{ github.run_number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: System deps
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip libffi-dev libssl-dev autoconf automake libtool pkg-config

      - name: Cache buildozer dirs
        uses: actions/cache@v4
        with:
          path: |
            ~/.buildozer
            ${{ env.APP_DIR }}/.buildozer
          key: ${{ runner.os }}-buildozer-${{ hashFiles(format('{0}/buildozer.spec', env.APP_DIR)) }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      - name: Install buildozer
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install buildozer Cython==0.29.36

      - name: Prepare release (only on tags)
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          KEYALIAS_PASS: ${{ secrets.KEYALIAS_PASS }}
        run: |
          set -e
          cd "$APP_DIR"
          echo "VERSION_NAME=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
          echo "VERSION_CODE=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
          echo "$KEYSTORE_BASE64" | base64 -d > jdv.keystore
          sed -i "s/^version *= *.*/version = ${GITHUB_REF_NAME#v}/" buildozer.spec || true
          grep -q "^android.numeric_version" buildozer.spec \
            && sed -i "s/^android.numeric_version *= *.*/android.numeric_version = ${GITHUB_RUN_NUMBER}/" buildozer.spec \
            || printf "\nandroid.numeric_version = %s\n" "${GITHUB_RUN_NUMBER}" >> buildozer.spec
          sed -i "s/{KESTORE_PASS}/${KEYSTORE_PASS}/g" buildozer.spec
          sed -i "s/{KEYALIAS_PASS}/${KEYALIAS_PASS}/g" buildozer.spec

      - name: Build (Debug on push/PR, Release on tag)
        working-directory: ${{ env.APP_DIR }}
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            echo "Release"; buildozer android release
          else
            echo "Debug"; buildozer android debug
          fi

      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          if ls ${{ env.APP_DIR }}/bin/*.aab 1> /dev/null 2>&1; then
            cp ${{ env.APP_DIR }}/bin/*.aab "artifacts/JDV-${{ env.VERSION_NAME }}-${{ env.VERSION_CODE }}.aab"
          fi
          if ls ${{ env.APP_DIR }}/bin/*.apk 1> /dev/null 2>&1; then
            cp ${{ env.APP_DIR }}/bin/*.apk "artifacts/JDV-${{ env.VERSION_NAME }}-${{ env.VERSION_CODE }}.apk"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jdv-android-${{ github.run_id }}
          path: artifacts/*
          if-no-files-found: error
